
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

&После("ПередЗаписью")
Процедура кл_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		НеотмененныеСтрокиТовары = Товары.НайтиСтроки(Новый Структура("Отменено", Ложь));
		СуммаСНДСИтого = 0;
		Для Каждого СтрокаТовара Из НеотмененныеСтрокиТовары Цикл
			СуммаСНДСИтого = СуммаСНДСИтого + СтрокаТовара.СуммаСНДС;	
		КонецЦикла;
		Если кл_ПредоплатаНаСайте И СуммаСНДСИтого > кл_СуммаПредоплаты Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru='Сумма заказа не может превышать сумму предоплаты.'"), , , ,
				Отказ);
			
		КонецЕсли;
	КонецЕсли;
	
	Если Пользователи.РолиДоступны("кл_РедактированиеЗаблокированныхРеквизитовЗаказКлиента") Тогда
		Возврат;
	КонецЕсли;
	
	Если кл_ЗагруженССайта И ПометкаУдаления Тогда
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Недостаточно прав для пометки на удаление заказа загруженного с сайта';
			|en = 'Insufficient rights to mark for deletion of an order uploaded from the site'"), , , ,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

&После("ОбработкаПроверкиЗаполнения")
Процедура кл_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	УсловиеСегментВходитВПереченьПоДоговору = ЗначениеЗаполнено(Договор)
		И РегистрыСведений.кл_ПереченьСегментовДляОтраженияСтатусов.СегментВходитВПеречень(
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "кл_СегментКлиента"));
		
	УсловиеСегментВходитВПереченьПоСоглашению = ЗначениеЗаполнено(Соглашение)
		И РегистрыСведений.кл_ПереченьСегментовДляОтраженияСтатусов.СегментВходитВПеречень(
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Соглашение, "СегментПартнеров"));
	
	Если УсловиеСегментВходитВПереченьПоДоговору ИЛИ УсловиеСегментВходитВПереченьПоСоглашению Тогда	
		ПроверяемыеРеквизиты.Добавить("кл_Состояние");
	КонецЕсли;
	
КонецПроцедуры

&После("ОбработкаПроведения")
Процедура кл_ОбработкаПроведения(Отказ, РежимПроведения)
	
	кл_ПроверкаЗапретаРеализацииВ2ВПоВидамНоменклатуры.кл_ПроверкаЗапретаРеализацииВ2В(Ссылка, Отказ);
	
	Если Не Отказ Тогда
		кл_ОбработкаСостоянияДокумента(Отказ);
	КонецЕсли; 
	
	ЗарегистрироватьЗаказКОбновлениюВMagento();
	
КонецПроцедуры

&После("ПриКопировании")
Процедура кл_ПриКопировании(ОбъектКопирования)
	
	кл_ЗагруженССайта = Ложь;
	кл_Состояние = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.кл_СостоянияЗаказовКлиентаИРеализаций.Новый");
	кл_ПредоплатаНаСайте 	= Ложь;
	кл_СуммаПредоплаты 		= 0;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура кл_ОбработкаСостоянияДокумента(Отказ)
	
	Если Не ЗначениеЗаполнено(кл_Состояние) Тогда
		Возврат;
	КонецЕсли;
	
	Если кл_Состояние = Справочники.кл_СостоянияЗаказовКлиентаИРеализаций.Собран
		Или кл_Состояние = Справочники.кл_СостоянияЗаказовКлиентаИРеализаций.СобранЧастично Тогда
		
		Если Не кл_КонтрольСтатусаСтроки(Ссылка, Товары, кл_Состояние, Статус) Тогда
				Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;

	ПоследнееСостояние = РегистрыСведений.кл_ИсторияСостояний.ПолучитьПоследнююЗапись(Ссылка);
	Если ПоследнееСостояние = кл_Состояние Тогда
		Возврат;
	КонецЕсли;
	
	Если кл_Состояние = Справочники.кл_СостоянияЗаказовКлиентаИРеализаций.Новый
		И Не ЗначениеЗаполнено(ПоследнееСостояние) Тогда 
		
		РегистрыСведений.кл_ИсторияСостояний.ДобавитьЗапись(Ссылка, кл_Состояние);
		
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("кл_ЗагрузкаССайта") Тогда
			
		Если НЕ кл_Состояние = ПоследнееСостояние И ЗначениеЗаполнено(ПоследнееСостояние) Тогда	
			
			ПредшествующиеСостояния = Справочники.кл_СостоянияЗаказовКлиентаИРеализаций.кл_МассивПредшествующихСостояний(кл_Состояние);
			Если ПредшествующиеСостояния.Найти(ПоследнееСостояние) = Неопределено Тогда 
				
				ШаблонТекста = НСтр("ru='Невозможно перевести в состояние %1, т.к. оно предшествует предыдущему.'");
				ТекстСообщения = СтрШаблон(ШаблонТекста, кл_Состояние);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
				Возврат;
				
			КонецЕсли;
				
			РегистрыСведений.кл_ИсторияСостояний.ДобавитьЗапись(Ссылка, кл_Состояние); 
			ДополнительныеСвойства.Вставить("СостояниеИзменено", Истина); 
				
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗарегистрироватьЗаказКОбновлениюВMagento()

	УстановитьПривилегированныйРежим(Истина); 
	
	УзелОбмена = кл_ОбменEcom.УзелОбменаMagentoЗаказы(); 
	
	Если Не кл_ЗагруженССайта Тогда 		
		Возврат;
	КонецЕсли; 
		
	Если ДополнительныеСвойства.Свойство("СостояниеИзменено") Тогда  
		
		Если ДополнительныеСвойства.СостояниеИзменено = Истина Тогда 
			
			ПланыОбмена.ЗарегистрироватьИзменения(УзелОбмена, Ссылка);
			
			Возврат;  
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция кл_КонтрольСтатусаСтроки(Источник, Товары, Состояние, Статус) 
	
	Запрос = Новый Запрос; 
	
	// BSLLS:LogicalOrInTheWhereSectionOfQuery-off
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&кл_Состояние КАК кл_Состояние,
		|	ЗаказКлиентаТовары.НомерСтроки КАК НомерСтроки,
		|	ЗаказКлиентаТовары.Отменено КАК Отменено,
		|	ЗаказКлиентаТовары.ВариантОбеспечения КАК ВариантОбеспечения,
		|	&Статус КАК Статус
		|ПОМЕСТИТЬ ВТ_ТоварыЗаказКлиента
		|ИЗ
		|	&Товары КАК ЗаказКлиентаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказКлиентаТовары.НомерСтроки КАК НомерСтроки,
		|	ЗаказКлиентаТовары.ВариантОбеспечения КАК ВариантОбеспечения,
		|	ЗаказКлиентаТовары.Статус КАК Статус
		|ИЗ
		|	ВТ_ТоварыЗаказКлиента КАК ЗаказКлиентаТовары
		|ГДЕ
		|	ЗаказКлиентаТовары.кл_Состояние В (ЗНАЧЕНИЕ(Справочник.кл_СостоянияЗаказовКлиентаИРеализаций.Собран), ЗНАЧЕНИЕ(Справочник.кл_СостоянияЗаказовКлиентаИРеализаций.СобранЧастично))
		|	И НЕ ЗаказКлиентаТовары.Отменено
		|	И НЕ ЗаказКлиентаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
		|	ИЛИ НЕ ЗаказКлиентаТовары.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению)";
	// BSLLS:LogicalOrInTheWhereSectionOfQuery-on
	
	Запрос.УстановитьПараметр("кл_Состояние", Состояние);
	Запрос.УстановитьПараметр("Статус", Статус);
	Запрос.УстановитьПараметр("Товары", Товары);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда		
		Возврат Истина;		
	Иначе
		
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Заказ не может быть проведен. 
			|В состоянии Собран или Собран частично может быть проведен заказ, статус которого К выполнению и все неотмененные строки заказа в статусе Отгрузить. 
			|Проверьте выполнение условий, скорректируйте и повторите операцию.'"));
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли