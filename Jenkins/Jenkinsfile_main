pipeline {
    
    options {
        disableConcurrentBuilds()
    }

    agent {
        node {
            label 'Windows'
                customWorkspace 'C:\\Projects\\CodeReview\\Jenkins\\RepoMain'
        }
    }
  
    environment{

        OSv8version = "--v8version ${env.v8version}"
        
        Sonar_login = "\"sonar.login=${env.Sonar_Token}\""
        
        ReliaseBaseConnection    = "/F${ReliaseBasePach}"
        ReliaseBaseAuthorization = "--db-user ${env.ReliaseBaseUser} --db-pwd ${env.ReliaseBasePwd}"

        WorkBaseConnection       = "/S${WorkBasePach}"
        WorkBaseAuthorization    = "--db-user ${env.WorkBaseUser} --db-pwd ${env.WorkBasePwd}"
        WorkBaseAuthorizationRac = "-db-user ${env.WorkBaseUser} -db-pwd ${env.WorkBasePwd}"

        ACCBaseConnection        = "/F${env.ACCBasePach}"
        ACCBaseAuthorization     = "--db-user ${env.ACCBaseUser} --db-pwd ${env.ACCBasePwd}"

        rac="\"C:\\Program Files\\1cv8\\${env.v8version}\\bin\\rac.exe\""
        uccode="123"
        ras="${env.rasServerAdres}:${env.rasServerPort}"
        
    }    

    stages{ 
                
        stage ("Preparation") {
            steps {                   
                
                cmd("IF NOT EXIST ${WORKSPACE}\\Temp md ${WORKSPACE}\\Temp")
                
            }
        } 
        
        stage ("Compile configuration") {    
            steps {
                    cmd("echo Compile .cf")    
                    cmd("vrunner compile --src ${WORKSPACE}\\DESIGNER --out ${WORKSPACE}\\Temp\\1Cv8.cf")
                }
            }  

        stage ('Lock Database') {
             steps {
                cmd("echo Lock Database")
                cmd("call deployka session kill -db ${WorkBaseConnection} ${WorkBaseAuthorizationRac} -rac ${rac} -lockuccode ${uccode} -ras ${ras}")
            }            
        }
        stage ('Saving configuration') {
            steps {
                cmd("echo Saving configuration")
                cmd("vrunner load --src ${WORKSPACE}\\Temp\\1Cv8.cf --ibconnection ${WorkBaseConnection} ${WorkBaseAuthorization}")
                cmd("vrunner updatedb --ibconnection ${WorkBaseConnection} ${WorkBaseAuthorization}")
            }  
        } 

        stage ('UnLock Database') {
             steps {
                cmd("echo UnLock Database")
                cmd("call deployka session unlock -db ${WorkBaseConnection} ${WorkBaseAuthorizationRac} -rac ${rac} -lockuccode ${uccode} -ras ${ras}")
            }  
        }  

    }

    post {
        
        always {
            cmd("echo always")
        }

        failure {
            SendEmail('Project Code Review', 'Project Code Review - failure Pipeline!', 'ankr@odysseyconsgroup.com') 
        }

        unstable {
            cmd("echo unstable")
            SendEmail('Ошибки прохождения тестирования Project Code Review.', 'Project Code Review - unstable.', 'ankr@odysseyconsgroup.com') 
        }      

        success {
            cmd("echo success")
        }
    }

}

def cmd(command) {
    bat "chcp 65001\n ${command}"
}

def SendEmail(body, subject, to) {
    emailext attachLog: true, body: "${body}", recipientProviders: [buildUser()], subject: "${subject}", to: "${to}"
}