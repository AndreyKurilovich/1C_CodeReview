
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПроверитьСуществованиеФайлаНаДиске(Отказ);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	РаботаСЗадачамиКлиент.ОткрытьФайл(Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверитьСуществованиеФайлаНаДиске(Отказ)
	
	Если ПропуститьПроверкаНаличияФайлаНаДиске Тогда	
		Возврат;	
	КонецЕсли;
	
	Если Не ФайлСуществует() Тогда
		
		Отказ = Истина;
		
		ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОтветНаВопросЗаписиПриНенайденномФайле", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещенияОЗакрытии, НСтр("ru='Файл не найден на диске. Продолжить?'"), 
			РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтветНаВопросЗаписиПриНенайденномФайле(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда	
		ПропуститьПроверкаНаличияФайлаНаДиске = Истина;	
		Записать();	
	КонецЕсли;
	          
КонецПроцедуры

&НаКлиенте
Функция ФайлСуществует()

	КаталогРепозитория = КаталогКаталогРепозиторияКонфигурации(Объект.Владелец);
	ПолныйПутьФайла = КаталогРепозитория + Объект.Наименование;
	
	Если ОбщегоНазначенияКлиент.ЭтоWindowsКлиент() Тогда
		ПолныйПутьФайла = СтрЗаменить(ПолныйПутьФайла, "/", "\");	
	ИначеЕсли ОбщегоНазначенияКлиент.ЭтоLinuxКлиент() Тогда
		ПолныйПутьФайла = СтрЗаменить(ПолныйПутьФайла,  "\", "/");	
	КонецЕсли;
	
	Файл = Новый Файл(ПолныйПутьФайла);  
	
	Возврат Файл.Существует();

КонецФункции

&НаСервереБезКонтекста
Функция КаталогКаталогРепозиторияКонфигурации(Конфигурация)
	
	КаталогРепозитория = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Конфигурации.КаталогРепозитория КАК КаталогРепозитория
		|ИЗ
		|	Справочник.Конфигурации КАК Конфигурации
		|ГДЕ
		|	Конфигурации.Ссылка = &Конфигурация";
	
	Запрос.УстановитьПараметр("Конфигурация", Конфигурация);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		КаталогРепозитория = Выборка.КаталогРепозитория;	
	КонецЕсли;  
	
	Возврат КаталогРепозитория;

КонецФункции

#КонецОбласти
